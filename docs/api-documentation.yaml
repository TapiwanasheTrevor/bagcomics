openapi: 3.0.3
info:
  title: Comprehensive Comic Platform API
  description: |
    A complete API for comic book cataloguing, management, sale, and consumption platform.
    
    ## Authentication
    This API uses Laravel Sanctum for authentication. Include the Bearer token in the Authorization header.
    
    ## Rate Limiting
    - Public routes: 120 requests per minute
    - Authenticated routes: 300 requests per minute  
    - Admin routes: 200 requests per minute
    
    ## Response Format
    All API responses follow a consistent format:
    ```json
    {
      "success": true,
      "data": {...},
      "timestamp": "2025-08-06T12:00:00Z"
    }
    ```
    
    Error responses:
    ```json
    {
      "success": false,
      "error": {
        "code": "ERROR_CODE",
        "message": "Error description",
        "timestamp": "2025-08-06T12:00:00Z"
      }
    }
    ```
  version: 1.0.0
  contact:
    name: API Support
    email: support@comicplatform.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.comicplatform.com/api
    description: Production server
  - url: https://staging-api.comicplatform.com/api
    description: Staging server
  - url: http://localhost:8000/api
    description: Development server

security:
  - BearerAuth: []

paths:
  # Comics API
  /comics:
    get:
      tags:
        - Comics
      summary: Get comics list
      description: Retrieve a paginated list of comics with optional filtering and sorting
      parameters:
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by genre
        - name: author
          in: query
          schema:
            type: string
          description: Filter by author
        - name: publisher
          in: query
          schema:
            type: string
          description: Filter by publisher
        - name: language
          in: query
          schema:
            type: string
          description: Filter by language
        - name: tags
          in: query
          schema:
            type: string
          description: Comma-separated list of tags
        - name: is_free
          in: query
          schema:
            type: boolean
          description: Filter by free comics
        - name: has_mature_content
          in: query
          schema:
            type: boolean
          description: Filter by mature content
        - name: search
          in: query
          schema:
            type: string
          description: Search in title, author, and description
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [title, published_at, average_rating, total_readers, page_count]
            default: published_at
          description: Sort field
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 12
          description: Items per page
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comic'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  timestamp:
                    type: string
                    format: date-time

  /comics/{id}:
    get:
      tags:
        - Comics
      summary: Get comic details
      description: Retrieve detailed information about a specific comic
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Comic ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ComicDetailed'
                  timestamp:
                    type: string
                    format: date-time
        '404':
          $ref: '#/components/responses/NotFound'

  /comics/featured:
    get:
      tags:
        - Comics
      summary: Get featured comics
      description: Retrieve a list of featured comics based on ratings and popularity
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comic'
                  timestamp:
                    type: string
                    format: date-time

  # Search API
  /search/comics:
    get:
      tags:
        - Search
      summary: Search comics
      description: Advanced search functionality with filters and sorting
      parameters:
        - name: query
          in: query
          schema:
            type: string
            maxLength: 255
          description: Search query
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by genre
        - name: min_rating
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 5
          description: Minimum rating filter
        - name: max_rating
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 5
          description: Maximum rating filter
        - name: min_price
          in: query
          schema:
            type: number
            minimum: 0
          description: Minimum price filter
        - name: max_price
          in: query
          schema:
            type: number
            minimum: 0
          description: Maximum price filter
        - name: publication_year_from
          in: query
          schema:
            type: integer
            minimum: 1900
          description: Publication year from
        - name: publication_year_to
          in: query
          schema:
            type: integer
            minimum: 1900
          description: Publication year to
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [title, published_at, average_rating, total_readers, page_count, price]
            default: published_at
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 12
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comic'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  timestamp:
                    type: string
                    format: date-time

  # Reading Progress API
  /comics/{comic_id}/progress:
    get:
      tags:
        - Reading Progress
      summary: Get reading progress
      description: Get user's reading progress for a specific comic
      security:
        - BearerAuth: []
      parameters:
        - name: comic_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ReadingProgress'
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /comics/{comic_id}/progress/update:
    post:
      tags:
        - Reading Progress
      summary: Update reading progress
      description: Update user's reading progress for a specific comic
      security:
        - BearerAuth: []
      parameters:
        - name: comic_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_page
              properties:
                current_page:
                  type: integer
                  minimum: 1
                  description: Current page number
                reading_time_seconds:
                  type: integer
                  minimum: 0
                  description: Reading time in seconds
                device_type:
                  type: string
                  enum: [desktop, mobile, tablet]
                  description: Device type used for reading
      responses:
        '200':
          description: Progress updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ReadingProgress'
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'

  # Reviews API
  /reviews/comics/{comic_id}:
    get:
      tags:
        - Reviews
      summary: Get comic reviews
      description: Get reviews for a specific comic
      parameters:
        - name: comic_id
          in: path
          required: true
          schema:
            type: integer
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, rating, helpful_votes]
            default: created_at
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  timestamp:
                    type: string
                    format: date-time

    post:
      tags:
        - Reviews
      summary: Submit a review
      description: Submit a review for a comic
      security:
        - BearerAuth: []
      parameters:
        - name: comic_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - content
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Rating from 1 to 5 stars
                title:
                  type: string
                  maxLength: 255
                  description: Review title
                content:
                  type: string
                  maxLength: 2000
                  description: Review content
                is_spoiler:
                  type: boolean
                  default: false
                  description: Whether the review contains spoilers
      responses:
        '201':
          description: Review created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Review'
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'

  # Payments API
  /payments/comics/{comic_id}/intent:
    post:
      tags:
        - Payments
      summary: Create payment intent
      description: Create a payment intent for purchasing a comic
      security:
        - BearerAuth: []
      parameters:
        - name: comic_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  enum: [card, paypal, apple_pay, google_pay]
                  description: Preferred payment method
                currency:
                  type: string
                  pattern: '^[A-Z]{3}$'
                  default: USD
                  description: Currency code (ISO 4217)
                save_payment_method:
                  type: boolean
                  default: false
                  description: Whether to save payment method for future use
      responses:
        '200':
          description: Payment intent created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      payment_intent:
                        $ref: '#/components/schemas/PaymentIntent'
                      client_secret:
                        type: string
                        description: Client secret for payment confirmation
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'

  /payments/process:
    post:
      tags:
        - Payments
      summary: Process payment
      description: Process a payment after successful payment intent confirmation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_intent_id
                - comic_id
              properties:
                payment_intent_id:
                  type: string
                  description: Stripe payment intent ID
                comic_id:
                  type: integer
                  description: Comic ID being purchased
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      payment:
                        $ref: '#/components/schemas/Payment'
                      message:
                        type: string
                        example: Payment processed successfully
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Comic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Amazing Spider-Man #1"
        slug:
          type: string
          example: "amazing-spider-man-1"
        author:
          type: string
          example: "Stan Lee"
        publisher:
          type: string
          example: "Marvel Comics"
        genre:
          type: string
          example: "Superhero"
        tags:
          type: array
          items:
            type: string
          example: ["action", "adventure", "superhero"]
        description:
          type: string
          example: "The origin story of Spider-Man"
        page_count:
          type: integer
          example: 22
        language:
          type: string
          example: "en"
        isbn:
          type: string
          example: "978-0-7851-2345-6"
        publication_year:
          type: integer
          example: 1963
        average_rating:
          type: number
          format: float
          example: 4.5
        total_ratings:
          type: integer
          example: 1250
        total_readers:
          type: integer
          example: 5000
        cover_image_url:
          type: string
          format: uri
          example: "https://example.com/covers/spider-man-1.jpg"
        is_free:
          type: boolean
          example: false
        price:
          type: number
          format: float
          example: 3.99
        has_mature_content:
          type: boolean
          example: false
        reading_time_estimate:
          type: integer
          example: 15
        is_new_release:
          type: boolean
          example: false
        published_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ComicDetailed:
      allOf:
        - $ref: '#/components/schemas/Comic'
        - type: object
          properties:
            content_warnings:
              type: array
              items:
                type: string
              example: ["violence", "language"]
            pdf_stream_url:
              type: string
              format: uri
              example: "https://example.com/comics/stream/spider-man-1"
            user_has_access:
              type: boolean
              example: true
            user_progress:
              $ref: '#/components/schemas/ReadingProgress'

    ReadingProgress:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 123
        comic_id:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 15
        total_pages:
          type: integer
          example: 22
        progress_percentage:
          type: number
          format: float
          example: 68.18
        reading_time_seconds:
          type: integer
          example: 900
        last_read_at:
          type: string
          format: date-time
        is_completed:
          type: boolean
          example: false
        device_type:
          type: string
          example: "desktop"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 123
        comic_id:
          type: integer
          example: 1
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        title:
          type: string
          example: "Amazing origin story!"
        content:
          type: string
          example: "This comic perfectly captures the essence of Spider-Man's origin."
        is_spoiler:
          type: boolean
          example: false
        helpful_votes:
          type: integer
          example: 25
        total_votes:
          type: integer
          example: 30
        is_approved:
          type: boolean
          example: true
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            avatar_url:
              type: string
              format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Payment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 123
        comic_id:
          type: integer
          example: 1
        stripe_payment_intent_id:
          type: string
          example: "pi_1234567890"
        amount:
          type: number
          format: float
          example: 3.99
        currency:
          type: string
          example: "USD"
        status:
          type: string
          enum: [pending, completed, failed, refunded]
          example: "completed"
        payment_method:
          type: string
          example: "card"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PaymentIntent:
      type: object
      properties:
        id:
          type: string
          example: "pi_1234567890"
        amount:
          type: integer
          example: 399
        currency:
          type: string
          example: "usd"
        status:
          type: string
          example: "requires_payment_method"

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 10
        per_page:
          type: integer
          example: 12
        total:
          type: integer
          example: 120

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "The given data was invalid."
            validation_errors:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
            timestamp:
              type: string
              format: date-time

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "NOT_FOUND"
                  message:
                    type: string
                    example: "Resource not found"
                  timestamp:
                    type: string
                    format: date-time

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "UNAUTHORIZED"
                  message:
                    type: string
                    example: "Authentication required"
                  timestamp:
                    type: string
                    format: date-time

    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: "BAD_REQUEST"
                  message:
                    type: string
                    example: "Bad request"
                  timestamp:
                    type: string
                    format: date-time

tags:
  - name: Comics
    description: Comic book management and retrieval
  - name: Search
    description: Search and discovery functionality
  - name: Reading Progress
    description: Reading progress tracking and bookmarks
  - name: Reviews
    description: User reviews and ratings
  - name: Payments
    description: Payment processing and purchase management
  - name: Social
    description: Social sharing and community features
  - name: Library
    description: User library management
  - name: Analytics
    description: Platform analytics and reporting
  - name: Admin
    description: Administrative functions